{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\malik.ertugrul\\\\Desktop\\\\Work\\\\Reactjs\\\\reactapp\\\\src\\\\components\\\\User.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass User extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isVisible: false\n    };\n  } // onClickEvent = () => {\n  //     console.log(this);\n  //     this.setState({\n  //         isVisible: !this.state.isVisible \n  //     })\n  // }\n  // arrow function olarak tanımlarsak otomatik bind() işlemi yapılmış olur.\n\n\n  render() {\n    // Destructing özelliği normalde this.props.name diye tanımlamıştık \n    const {\n      name,\n      department,\n      skill\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.state.isVisible ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: this.onClickEvent,\n          children: [\"Name = \", name, \" \", /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"far fa-trash-alt\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 69\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Deparment = \", department]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Skill =\", skill]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 41\n      }, this) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nUser.defaultProps = {\n  department: \"Unemployed\"\n};\nUser.propTypes = {\n  name: PropTypes.string.isRequired,\n  department: PropTypes.string.isRequired,\n  skill: PropTypes.string.isRequired\n};\nexport default User;","map":{"version":3,"sources":["C:/Users/malik.ertugrul/Desktop/Work/Reactjs/reactapp/src/components/User.js"],"names":["React","Component","PropTypes","User","constructor","props","state","isVisible","render","name","department","skill","onClickEvent","defaultProps","propTypes","string","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;AAGA,MAAMC,IAAN,SAAmBF,SAAnB,CAA6B;AACzBG,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,SAAS,EAAE;AADF,KAAb;AAGH,GANwB,CAOzB;AACA;AACA;AACA;AACA;AACA;AAEA;;;AAGAC,EAAAA,MAAM,GAAI;AAEN;AACA,UAAM;AAACC,MAAAA,IAAD;AAAOC,MAAAA,UAAP;AAAmBC,MAAAA;AAAnB,QAA4B,KAAKN,KAAvC;AACA,wBACI;AAAA,gBACK,KAAKC,KAAL,CAAWC,SAAX,gBAAuB;AAAA,gCAGpB;AAAI,UAAA,OAAO,EAAI,KAAKK,YAApB;AAAA,gCAA0CH,IAA1C,oBAAgD;AAAG,YAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,kBAAhD;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHoB,eAIpB;AAAA,qCAAiBC,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJoB,eAKpB;AAAA,gCAAYC,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,gBALoB;AAAA;AAAA;AAAA;AAAA;AAAA,cAAvB,GAMO;AAPZ;AAAA;AAAA;AAAA;AAAA,YADJ;AAYH;;AAjCwB;;AAmC7BR,IAAI,CAACU,YAAL,GAAoB;AAChBH,EAAAA,UAAU,EAAE;AADI,CAApB;AAIAP,IAAI,CAACW,SAAL,GAAiB;AACbL,EAAAA,IAAI,EAAEP,SAAS,CAACa,MAAV,CAAiBC,UADV;AAEbN,EAAAA,UAAU,EAAER,SAAS,CAACa,MAAV,CAAiBC,UAFhB;AAGbL,EAAAA,KAAK,EAAET,SAAS,CAACa,MAAV,CAAiBC;AAHX,CAAjB;AAMA,eAAeb,IAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nclass User extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            isVisible: false\r\n        }\r\n    }\r\n    // onClickEvent = () => {\r\n    //     console.log(this);\r\n    //     this.setState({\r\n    //         isVisible: !this.state.isVisible \r\n    //     })\r\n    // }\r\n    \r\n    // arrow function olarak tanımlarsak otomatik bind() işlemi yapılmış olur.\r\n\r\n\r\n    render () {\r\n\r\n        // Destructing özelliği normalde this.props.name diye tanımlamıştık \r\n        const {name, department, skill} = this.props;\r\n        return(\r\n            <div>\r\n                {this.state.isVisible ? <ul>\r\n                    {/* .bind(this) fonksiyonunu kullanarak oluşturduğumuz metodu bağlıyoruz.\r\n                    kendi metodlarımızda this anahtar kelimesi class direkt olarak göstermiyor */}\r\n                    <li onClick = {this.onClickEvent}>Name = {name} <i className=\"far fa-trash-alt\"></i> </li>\r\n                    <li>Deparment = {department}</li>\r\n                    <li>Skill ={skill}</li>\r\n                </ul> : null}\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\nUser.defaultProps = {\r\n    department: \"Unemployed\"\r\n}\r\n\r\nUser.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    department: PropTypes.string.isRequired,\r\n    skill: PropTypes.string.isRequired\r\n}\r\n\r\nexport default User;"]},"metadata":{},"sourceType":"module"}